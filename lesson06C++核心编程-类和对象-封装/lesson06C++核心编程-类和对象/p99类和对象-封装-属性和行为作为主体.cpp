/*
类和对象

c++面向对象的三大特性：
	封装、继承、多态

c++认为万事万物皆为对象，对象有其属性和行为
*/
/*
例如：
	人可以作为对象，属性有姓名、年龄、身高、体重...，行为有走、跑、跳、吃饭、唱歌

	车也可以作为对象，属性有轮胎，方向盘，车灯...，行为有载人、放音乐、放空调

	具有相同性质的对象，我们可以抽象称为类，人属于人类、车属于车类
*/

/*
封装
	封装是C++面向对象三大特征之一

封装的意义：
	将属性和行为作为一个整体，表现生活中的事物
	将属性和行为加以权限控制

在设计类的时候，将属性和行为写在一起，表现事物

语法：
	class 类名 {访问权限： 属性 / 行为};
*/

// 示例1：		设计一个圆类，求圆的周长

#include <iostream>
using namespace std;

//圆周率
const double PI = 3.1415926;

// 设计一个圆类，求圆的周长
// 圆求周长的公示： 2 * PI * R

// class代表设计一个类，后面紧跟着的就是类的名称
class Circle 
{
	//访问权限
	//公共权限
public:

	// 属性
	// 半径
	int m_r;

	// 行为
	// 获取圆的周长
	double calculateZC() 
	{
		return 2 * PI * m_r;
	}
};

int main99() 
{
	// 通过圆类，创建具体的圆（对象）
	// 实例化（通过一个类，创建一个对象的过程）
	Circle c1;
	// 给圆对象的属性进行赋值
	c1.m_r = 10;

	// 2 * 3.14 * 10 = 62.8
	cout << "圆的周长为：" << c1.calculateZC() << endl;

	system("pause");
	return 0;
}