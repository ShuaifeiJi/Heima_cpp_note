/*
构造函数调用规则：

默认情况下，c++创建爱你 对象的时候，调用三个构造函数
	1、 默认构造函数（无参构造函数， 函数体为空）
	2、 默认析构函数（无参， 函数体为空）
	3、 默认拷贝构造函数，对属性进行拷贝
*/

/*
c++中构造函数的调用规则：
	1、如果用户定义了有参构造函数，那么c++不再提供无参构造函数，但是会提供默认拷贝构造
	2、如果用户定义拷贝构造函数，c++不会再提供其他构造函数 （例如：无参构造函数不提供了）
*/

#include <iostream>
using namespace std;

// 构造函数的调用规则
// 1、创建一个类，c++编译器会给每个类都添加至少3个构造函数
//		默认构造 （空实现）
//		析构函数 （空实现）
//		拷贝构造 （值拷贝）

class Person4 
{
public:
	Person4() 
	{
		cout << "Person4的默认构造函数的调用" << endl;
	}

	Person4(int age) 
	{
		m_Age = age;
		cout << "Person4 有参构造函数的调用" << endl;
	}

	Person4(const Person4 &p) 
	{
		m_Age = p.m_Age;
		cout << "Person4拷贝构造函数的调用" << endl;
	}


	~Person4() 
	{
		cout << "Person4的默认析构函数的调用。。。" << endl;
	}

	int m_Age;

};
void test06() 
{
	Person4 p;
	p.m_Age = 18;

	Person4 p2(p); // 注释掉拷贝构造函数后，就使用编译器提供的拷贝构造函数，做一个值拷贝

	cout << "p2的年龄为:" << p2.m_Age << endl;
}

// 2、
// 如果我们写了有参构造，编译器就不再提供默认构造，依然提供拷贝构造
// 如果我们写了拷贝构造函数，编译器就不同其他普通构造函数了
// （把其他构造函数都注释掉，只留下拷贝构造，报错，没有默认的构造函数可用）
void test07() 
{
	Person4 p; // 若只提供有参构造，注释掉默认构造，则报错，没有合适的默认构造

}

int main109() {
	//test06();

	test07();

	system("pause");
	return 0;
}